{"mappings":"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","sources":["<anon>","src/game.js","src/gameScene.js","src/titleScene.js"],"sourcesContent":["class $0e625f2110fba716$var$GameScene extends Phaser.Scene {\n    constructor(){\n        super(\"gameScene\");\n    }\n    init(data) {\n        this.velocityDelta = data.mode;\n    }\n    preload() {\n        this.collected_stars = 0;\n        this.load.image(\"sky\", \"/gravity-stars/night-sky.png\");\n        this.load.image(\"platform\", \"/gravity-stars/platform.png\");\n        this.load.image(\"ground\", \"/gravity-stars/ground.png\");\n        this.load.image(\"star\", \"/gravity-stars/star.png\");\n        this.load.spritesheet(\"dude\", \"/gravity-stars/dude.png\", {\n            frameWidth: 32,\n            frameHeight: 48\n        });\n    }\n    animationsCreate() {\n        this.anims.create({\n            key: \"left\",\n            frames: this.anims.generateFrameNumbers(\"dude\", {\n                start: 0,\n                end: 3\n            }),\n            frameRate: 10,\n            repeat: -1\n        });\n        this.anims.create({\n            key: \"turn\",\n            frames: [\n                {\n                    key: \"dude\",\n                    frame: 4\n                }\n            ],\n            frameRate: 20\n        });\n        this.anims.create({\n            key: \"right\",\n            frames: this.anims.generateFrameNumbers(\"dude\", {\n                start: 5,\n                end: 8\n            }),\n            frameRate: 10,\n            repeat: -1\n        });\n    }\n    cursorCreate() {\n        this.cursors = this.input.keyboard.createCursorKeys();\n        this.velocityCursors = this.input.keyboard.addKeys(\"ONE,TWO,THREE,FOUR\");\n        if (this.cursors.left.isDown) {\n            this.player.setVelocityX(-80 * (this.velocityDelta + 4));\n            this.player.anims.play(\"left\", true);\n        } else if (this.cursors.right.isDown) {\n            this.player.setVelocityX(80 * (this.velocityDelta + 4));\n            this.player.anims.play(\"right\", true);\n        } else {\n            this.player.setVelocityX(0);\n            this.player.anims.play(\"turn\");\n        }\n        // Y: one: 120, two: 240, 3: 360, 4: 480\n        // X: one: 400, two: 480, 3: 560, 4: 640\n        if (this.cursors.space.isDown) {\n            if (this.collected_stars >= 4) this.player.setDrag(25 * this.collected_stars);\n            else this.player.setDrag(125 - 25 * this.velocityDelta);\n        }\n        if (this.cursors.space.isUp) this.player.setDrag(0);\n        if (this.cursors.up.isDown) this.player.setVelocityY(-120 * this.velocityDelta);\n        if (this.cursors.down.isDown && !this.player.body.touching.down) this.player.setVelocityY(120 * this.velocityDelta);\n    }\n    collectStar(player, star) {\n        star.disableBody(true, true);\n        this.collected_stars += 1;\n        this.scoreText.setText(\"Stars: \" + this.collected_stars);\n        if (this.collected_stars == 15) {\n            this.titleButton.setText(\"Finish to Title!\");\n            this.scoreText.setText(\"Planet's Gravity Restored!\");\n            this.player.body.setGravityY(300);\n            this.velocityDelta = 3;\n            this.titleButton.x = 650;\n        }\n    }\n    reset(player) {\n        if (this.collected_stars !== 15) this.scene.restart();\n    }\n    create() {\n        this.add.image(450, 550, \"sky\");\n        const reset = this.add.text(900, 915, \"Reset\", {\n            fill: \"#fff\",\n            fontSize: \"20px\"\n        });\n        reset.depth = 10;\n        reset.setInteractive();\n        reset.on(\"pointerdown\", ()=>this.scene.restart());\n        this.titleButton = this.add.text(775, 915, \"Title\", {\n            fill: \"#fff\",\n            fontSize: \"20px\"\n        });\n        this.titleButton.depth = 10;\n        this.titleButton.setInteractive();\n        this.titleButton.on(\"pointerdown\", ()=>{\n            this.scene.stop(\"gameScene\");\n            this.scene.start(\"titleScene\");\n        });\n        // Platforms!\n        this.platforms = this.physics.add.staticGroup();\n        this.ground = this.physics.add.staticGroup();\n        this.ground.create(500, 925, \"ground\");\n        this.platforms.create(600, 750, \"platform\");\n        this.platforms.create(50, 550, \"platform\");\n        this.platforms.create(850, 325, \"platform\");\n        this.platforms.create(1050, 100, \"platform\");\n        // End\n        // Player!\n        this.player = this.physics.add.sprite(100, 650, \"dude\");\n        this.player.setBounce(0.1);\n        this.player.setCollideWorldBounds(true);\n        this.player.body.setGravityY(-300);\n        // this.physics.add.collider(this.player, this.platforms);\n        this.physics.add.collider(this.player, this.ground, ()=>this.reset(this.player));\n        this.physics.add.collider(this.player, this.platforms, ()=>this.reset(this.player));\n        // End\n        // Stars!\n        this.stars = this.physics.add.group({\n            key: \"star\",\n            repeat: 14,\n            setXY: {\n                x: 12,\n                y: 0,\n                stepX: 70\n            }\n        });\n        // this.stars.children.iterate(function (child) {\n        //   child.setBounceY(Phaser.Math.FloatBetween(0.2, 0.4));\n        // });\n        this.physics.add.collider(this.stars, this.platforms);\n        this.physics.add.collider(this.stars, this.ground);\n        this.physics.add.overlap(this.player, this.stars, this.collectStar, null, this);\n        this.scoreText = this.add.text(16, 16, \"Stars: 0\", {\n            fontSize: \"32px\",\n            fill: \"#fff\",\n            backgroundColor: \"#060d29\"\n        });\n        this.scoreText.setPadding(10);\n        // End\n        this.animationsCreate();\n    }\n    update() {\n        this.cursorCreate();\n    }\n}\nvar $0e625f2110fba716$export$2e2bcd8739ae039 = $0e625f2110fba716$var$GameScene;\n\n\nclass $6cd5113a54700164$var$TitleScene extends Phaser.Scene {\n    constructor(){\n        super('titleScene');\n    }\n    preload() {\n        this.load.image(\"background\", \"/gravity-stars/background.png\");\n    }\n    startGame(mode) {\n        this.scene.stop(\"titleScene\");\n        this.scene.start(\"gameScene\", {\n            mode: mode\n        });\n    }\n    create() {\n        const bg = this.add.image(450, 550, \"background\");\n        const text = this.add.text(400, 350, \"Gravity Stars!\", {\n            fontSize: \"32px\"\n        });\n        const easy = this.add.text(325, 450, \"Easy!\", {\n            fill: \"#5399f5\"\n        });\n        easy.setInteractive();\n        easy.on(\"pointerdown\", ()=>this.startGame(1));\n        const medium = this.add.text(425, 450, \"Medium!\", {\n            fill: \"#5399f5\"\n        });\n        medium.setInteractive();\n        medium.on(\"pointerdown\", ()=>this.startGame(2));\n        const hard = this.add.text(550, 450, \"Hard!\", {\n            fill: \"#5399f5\"\n        });\n        hard.setInteractive();\n        hard.on(\"pointerdown\", ()=>this.startGame(3));\n        const impossible = this.add.text(650, 450, \"Impossible!\", {\n            fill: \"#5399f5\"\n        });\n        impossible.setInteractive();\n        impossible.on(\"pointerdown\", ()=>this.startGame(4));\n        const desc = this.add.text(250, 500, \"You are a purple dude with a jetpack.\\nDo NOT touch the ground; Collect all stars to win!\\n\\nEach level increases the speed and decreases braking power.\\nEvery star you collect gives you more braking power.\\n\\nArrow Keys - control\\nSpace - brakes\\n\\nStory: Your planet's gravity is reversed,\\nyou need to save your planet quickly by collecting all the stars!\", {\n            fill: \"#fff\"\n        });\n    }\n}\nvar $6cd5113a54700164$export$2e2bcd8739ae039 = $6cd5113a54700164$var$TitleScene;\n\n\nconst $4ee2b06a9c1953f0$var$config = {\n    type: Phaser.AUTO,\n    width: 1000,\n    height: 950,\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            gravity: {\n                y: 300\n            },\n            debug: false\n        }\n    }\n};\ngame = new Phaser.Game($4ee2b06a9c1953f0$var$config);\ngame.scene.add('gameScene', (0, $0e625f2110fba716$export$2e2bcd8739ae039));\ngame.scene.add('titleScene', (0, $6cd5113a54700164$export$2e2bcd8739ae039));\ngame.scene.start('titleScene');\n\n\n//# sourceMappingURL=index.56cb64d4.js.map\n","import GameScene from './gameScene.js';\nimport TitleScene from './titleScene.js';\n\nconst config = {\n  type: Phaser.AUTO,\n  width: 1000,\n  height: 950,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { y: 300 },\n      debug: false,\n    },\n  },\n};\n\ngame = new Phaser.Game(config);\n\ngame.scene.add('gameScene', GameScene)\ngame.scene.add('titleScene', TitleScene)\n\ngame.scene.start('titleScene')","class GameScene extends Phaser.Scene {\n  constructor() {\n    super(\"gameScene\");\n  }\n\n  init(data) {\n    this.velocityDelta = data.mode;\n  }\n\n  preload() {\n    this.collected_stars = 0;\n\n    this.load.image(\"sky\", \"/gravity-stars/night-sky.png\");\n    this.load.image(\"platform\", \"/gravity-stars/platform.png\");\n    this.load.image(\"ground\", \"/gravity-stars/ground.png\");\n    this.load.image(\"star\", \"/gravity-stars/star.png\");\n    this.load.spritesheet(\"dude\", \"/gravity-stars/dude.png\", {\n      frameWidth: 32,\n      frameHeight: 48,\n    });\n  }\n\n  animationsCreate() {\n    this.anims.create({\n      key: \"left\",\n      frames: this.anims.generateFrameNumbers(\"dude\", { start: 0, end: 3 }),\n      frameRate: 10,\n      repeat: -1,\n    });\n\n    this.anims.create({\n      key: \"turn\",\n      frames: [{ key: \"dude\", frame: 4 }],\n      frameRate: 20,\n    });\n\n    this.anims.create({\n      key: \"right\",\n      frames: this.anims.generateFrameNumbers(\"dude\", { start: 5, end: 8 }),\n      frameRate: 10,\n      repeat: -1,\n    });\n  }\n\n  cursorCreate() {\n    this.cursors = this.input.keyboard.createCursorKeys();\n    this.velocityCursors = this.input.keyboard.addKeys(\"ONE,TWO,THREE,FOUR\");\n    if (this.cursors.left.isDown) {\n      this.player.setVelocityX(-80 * (this.velocityDelta + 4));\n\n      this.player.anims.play(\"left\", true);\n    } else if (this.cursors.right.isDown) {\n      this.player.setVelocityX(80 * (this.velocityDelta + 4));\n\n      this.player.anims.play(\"right\", true);\n    } else {\n      this.player.setVelocityX(0);\n\n      this.player.anims.play(\"turn\");\n    }\n\n    // Y: one: 120, two: 240, 3: 360, 4: 480\n    // X: one: 400, two: 480, 3: 560, 4: 640\n\n    if (this.cursors.space.isDown) {\n      if (this.collected_stars >= 4) {\n        this.player.setDrag(25 * this.collected_stars);\n      } else {\n        this.player.setDrag(125 - 25 * this.velocityDelta);\n      }\n    }\n\n    if (this.cursors.space.isUp) {\n      this.player.setDrag(0);\n    }\n\n    if (this.cursors.up.isDown) {\n      this.player.setVelocityY(-120 * this.velocityDelta);\n    }\n\n    if (this.cursors.down.isDown && !this.player.body.touching.down) {\n      this.player.setVelocityY(120 * this.velocityDelta);\n    }\n  }\n\n  collectStar(player, star) {\n    star.disableBody(true, true);\n\n    this.collected_stars += 1;\n    this.scoreText.setText(\"Stars: \" + this.collected_stars);\n\n    if (this.collected_stars == 15) {\n      this.titleButton.setText(\"Finish to Title!\")\n      this.scoreText.setText(\"Planet's Gravity Restored!\")\n      this.player.body.setGravityY(300);\n      this.velocityDelta = 3\n      this.titleButton.x = 650\n  }\n  }\n\n  reset(player) {\n    if (this.collected_stars !== 15) {\n      this.scene.restart();\n    }\n  }\n\n  create() {\n    this.add.image(450, 550, \"sky\");\n\n    const reset = this.add.text(900, 915, \"Reset\", {\n      fill: \"#fff\",\n      fontSize: \"20px\",\n    });\n    reset.depth = 10;\n    reset.setInteractive();\n    reset.on(\"pointerdown\", () => this.scene.restart());\n\n    this.titleButton = this.add.text(775, 915, \"Title\", {\n      fill: \"#fff\",\n      fontSize: \"20px\",\n    });\n    this.titleButton.depth = 10;\n    this.titleButton.setInteractive();\n    this.titleButton.on(\"pointerdown\", () => {\n      this.scene.stop(\"gameScene\");\n      this.scene.start(\"titleScene\");\n    });\n\n    // Platforms!\n    this.platforms = this.physics.add.staticGroup();\n    this.ground = this.physics.add.staticGroup();\n\n    this.ground.create(500, 925, \"ground\")\n\n    this.platforms.create(600, 750, \"platform\");\n    this.platforms.create(50, 550, \"platform\");\n    this.platforms.create(850, 325, \"platform\");\n    this.platforms.create(1050, 100, \"platform\");\n    // End\n\n    // Player!\n    this.player = this.physics.add.sprite(100, 650, \"dude\");\n\n    this.player.setBounce(0.1);\n    this.player.setCollideWorldBounds(true);\n\n    this.player.body.setGravityY(-300);\n\n    // this.physics.add.collider(this.player, this.platforms);\n    this.physics.add.collider(this.player, this.ground, () =>\n      this.reset(this.player)\n    );\n    this.physics.add.collider(this.player, this.platforms, () =>\n      this.reset(this.player)\n    );\n    // End\n\n    // Stars!\n    this.stars = this.physics.add.group({\n      key: \"star\",\n      repeat: 14,\n      setXY: { x: 12, y: 0, stepX: 70 },\n    });\n\n    // this.stars.children.iterate(function (child) {\n    //   child.setBounceY(Phaser.Math.FloatBetween(0.2, 0.4));\n    // });\n\n    this.physics.add.collider(this.stars, this.platforms);\n    this.physics.add.collider(this.stars, this.ground);\n    this.physics.add.overlap(\n      this.player,\n      this.stars,\n      this.collectStar,\n      null,\n      this\n    );\n\n    this.scoreText = this.add.text(16, 16, \"Stars: 0\", {\n      fontSize: \"32px\",\n      fill: \"#fff\",\n      backgroundColor: \"#060d29\"\n    });\n\n    this.scoreText.setPadding(10)\n    // End\n    this.animationsCreate();\n  }\n\n  update() {\n    this.cursorCreate();\n  }\n}\n\nexport default GameScene;\n","class TitleScene extends Phaser.Scene {\n  constructor() {\n    super('titleScene');\n  }\n\n  preload() {\n    this.load.image(\"background\", \"/gravity-stars/background.png\");\n  }\n\n  startGame(mode) {\n\tthis.scene.stop(\"titleScene\")\n    this.scene.start(\"gameScene\", { mode: mode });\n  }\n\n  create() {\n    const bg = this.add.image(450, 550, \"background\");\n\n    const text = this.add.text(400, 350, \"Gravity Stars!\", {\n      fontSize: \"32px\",\n    });\n\n    const easy = this.add.text(325, 450, \"Easy!\", { fill: \"#5399f5\" });\n    easy.setInteractive();\n    easy.on(\"pointerdown\", () => this.startGame(1));\n\n    const medium = this.add.text(425, 450, \"Medium!\", { fill: \"#5399f5\" });\n    medium.setInteractive();\n    medium.on(\"pointerdown\", () => this.startGame(2));\n\n    const hard = this.add.text(550, 450, \"Hard!\", { fill: \"#5399f5\" });\n    hard.setInteractive();\n    hard.on(\"pointerdown\", () => this.startGame(3));\n\n    const impossible = this.add.text(650, 450, \"Impossible!\", {\n      fill: \"#5399f5\",\n    });\n    impossible.setInteractive();\n    impossible.on(\"pointerdown\", () => this.startGame(4));\n\n\tconst desc = this.add.text(250, 500, \"You are a purple dude with a jetpack.\\nDo NOT touch the ground; Collect all stars to win!\\n\\nEach level increases the speed and decreases braking power.\\nEvery star you collect gives you more braking power.\\n\\nArrow Keys - control\\nSpace - brakes\\n\\nStory: Your planet's gravity is reversed,\\nyou need to save your planet quickly by collecting all the stars!\", {fill: \"#fff\"})\n  }\n}\n\nexport default TitleScene;\n"],"names":["$0e625f2110fba716$var$GameScene","Phaser","Scene","constructor","init","data","velocityDelta","mode","preload","collected_stars","load","image","spritesheet","frameWidth","frameHeight","animationsCreate","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","repeat","frame","cursorCreate","cursors","input","keyboard","createCursorKeys","velocityCursors","addKeys","left","isDown","player","setVelocityX","play","right","space","setDrag","isUp","up","setVelocityY","down","body","touching","collectStar","star","disableBody","scoreText","setText","titleButton","setGravityY","x","reset","scene","restart","add","text","fill","fontSize","depth","setInteractive","on","stop","platforms","physics","staticGroup","ground","sprite","setBounce","setCollideWorldBounds","collider","stars","group","setXY","y","stepX","overlap","backgroundColor","setPadding","update","$6cd5113a54700164$var$TitleScene","startGame","easy","medium","hard","impossible","$4ee2b06a9c1953f0$var$config","type","AUTO","width","height","default","arcade","gravity","debug","game","Game"],"version":3,"file":"index.56cb64d4.js.map"}